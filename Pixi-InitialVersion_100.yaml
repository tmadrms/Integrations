openapi: 3.0.0
info:
  description: Pixi Photo Sharing API Example
  version: 1.0.1
  title: Pixi-InitialVersion
  contact:
    email: nicole.becher@owasp.org
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
tags:
  - name: admins
    description: Secured Admin-only calls
  - name: users
    description: Operations available to regular, logged in users
  - name: anyone
    description: Operations available to anyone
paths:
  /api/login:
    post:
      tags:
        - anyone
      x-42c-no-authentication: true
      x-42c-sensitivity: 3
      summary: login successfully and receive json web token.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                user:
                  type: string
                  format: email
                  maxLength: 128
                  pattern: ^example-[0-9a-z]+$
                  example: andy@andy.com
                pass:
                  type: string
                  format: password
                  maxLength: 32
                  pattern: ^example-[0-9a-z]+$
                  example: mypassword
              required:
                - user
                - pass
      operationId: authenticate
      description: user supplies user name and password and receives a json web token
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    pattern: ^[a-bA-Z\s]+
                    maxLength: 20
                  token:
                    type: string
                    maxLength: 700
                    pattern: ^([a-zA-Z0-9_=]{4,})\.([a-zA-Z0-9_=]{4,})\.([a-zA-Z0-9_\-\+\/=]{4,})
                required:
                  - message
                  - token
        "202":
          description: successfully request, but invalid password
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
        "422":
          description: missing parameters
  /api/register:
    post:
      tags:
        - anyone
      x-42c-no-authentication: true
      summary: register for an account and receive token
      operationId: register
      description: user supplies email and password to register and receives a json web
        token.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserRegistrationData"
        required: true
      responses:
        "200":
          description: successfully registered, token received
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  token:
                    type: string
                    pattern: ^([a-zA-Z0-9_=]{4,})\.([a-zA-Z0-9_=]{4,})\.([a-zA-Z0-9_\-\+\/=]{4,})
        "202":
          description: email address already registered
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /api/user/info:
    get:
      tags:
        - users
      summary: get user information
      operationId: userinfo
      description: user supplies valid token and receives all user info
      parameters:
        - in: header
          name: x-access-token
          description: Users JWT Token
          required: true
          schema:
            type: string
            maxLength: 32
            pattern: ^([a-zA-Z0-9_=]{4,})\.([a-zA-Z0-9_=]{4,})\.([a-zA-Z0-9_\-\+\/=]{4,})
      responses:
        "200":
          description: successful authentication sent user information
          content:
            application/json:
              schema:
                type: array
                maxItems: 10
                items:
                  $ref: "#/components/schemas/UsersItem"
        "403":
          description: invalid or missing token
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  success:
                    type: boolean
      security:
        - access-token: []
  /api/user/edit_info:
    put:
      tags:
        - users
      summary: edit user information
      operationId: edituserinfo
      description: user supplies valid token and updates all user info
      security:
        - access-token: []
      parameters:
        - in: header
          name: x-access-token
          required: true
          schema:
            type: string
            pattern: ^([a-zA-Z0-9_=]{4,})\.([a-zA-Z0-9_=]{4,})\.([a-zA-Z0-9_\-\+\/=]{4,})
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserRegistrationData"
        description: userobject
        required: true
      responses:
        "200":
          description: successful authentication sent user information
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
        "403":
          description: invalid or missing token
  /api/admin/users/search:
    get:
      security:
        - access-token: []
      tags:
        - admins
      summary: search for a specific user
      description: search for a specific user
      parameters:
        - in: header
          name: x-access-token
          required: true
          schema:
            type: string
            maxLength: 32
            pattern: ^([a-zA-Z0-9_=]{4,})\.([a-zA-Z0-9_=]{4,})\.([a-zA-Z0-9_\-\+\/=]{4,})
        - in: query
          name: search
          description: search query ?search=xxx
          required: true
          schema:
            type: string
            maxLength: 32
            pattern: ^example-[0-9a-z]+$
      responses:
        "200":
          description: successful authentication user photo json object
        "403":
          description: invalid or missing token
      operationId: search for a specific user
  /api/admin/all_users:
    get:
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UsersItem"
        "403":
          description: No token provided or invalid token.
      tags:
        - admins
      security:
        - access-token: []
      parameters:
        - in: header
          name: x-access-token
          required: true
          schema:
            type: string
            maxLength: 32
            pattern: ^([a-zA-Z0-9_=]{4,})\.([a-zA-Z0-9_=]{4,})\.([a-zA-Z0-9_\-\+\/=]{4,})
      summary: Returns the list of ALL users. Must be admin to call.
      description: Returns the list of ALL users. Must be admin to call.
      operationId: adminallusers
servers:
  - url: https://api-protect.42crunch.cloud/andy/
components:
  securitySchemes:
    access-token:
      type: apiKey
      name: x-access-token
      in: header
  schemas:
    UsersItem:
      type: object
      required:
        - email
        - password
      properties:
        _id:
          type: number
          example: 1
        pic:
          type: string
          example: 1
        email:
          type: string
          example: email@email.com
          pattern: ^([a-zA-Z0-9_\-\.]+)@([a-zA-Z0-9_\-\.]+)\.([a-zA-Z]{2,5})$
          maxLength: 64
        password:
          type: string
          example: p@ssword1
        name:
          type: string
          example: Johnny Appleseed
        is_admin:
          description: is admin
          type: boolean
        account_balance:
          description: remaining balance
          type: number
    UserRegistrationData:
      type: object
      required:
        - id
        - user
        - pass
        - name
        - is_admin
        - account_balance
      properties:
        id:
          type: integer
          maximum: 10
        user:
          type: string
          format: email
          minLength: 10
          maxLength: 50
        pass:
          type: string
          minLength: 8
          pattern: ^example-[0-9a-z]+$
          maxLength: 32
        name:
          type: string
          maxLength: 30
          pattern: ^example-[0-9a-z]+$
        is_admin:
          type: boolean
        account_balance:
          type: number
          description: Minimum account balance - Must be 10 or higher
          maximum: 1024
          minimum: 0
          format: int32
    GeneratedSchemaName1:
      type: object
      properties:
        status:
          type: integer
        title:
          type: string
        detail:
          type: string
        uuid:
          type: string
      additionalProperties: false
      required:
        - status
        - title
        - detail
        - uuid
    GeneratedSchemaName2:
      type: object
      properties:
        message:
          type: string
      additionalProperties: false
      required:
        - message